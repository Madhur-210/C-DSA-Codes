#include<cstring>

int firstIndex(int input[], int size, int x) {
   if(input[0]==x){
        return 0;
    }
    if(size==0){
        return -1;
    }
    int ans=firstIndex(input+1,size-1,x);
    if(ans!=-1){
        return ans+1;
    }
    return ans;
}

int lastIndex(int input[], int size, int x) {
    if(size==0){
        return -1;
    }
    // int ans=lastIndex(input,size-1,x);
    // if(input[size-1]==x){
    //     return size-1;
    // }   
    int ans=lastIndex(input+1,size-1,x);
    if(ans==-1){
        if(input[0]==x){
            return 0;
        }
        else{
            return -1;
        }
    }
    return ans+1;
}

bool checkPalindrome(char input[],int start,int end){
    if(start>end){
        return true;
    }
    if(input[start]==input[end]){
        return checkPalindrome(input,start+1,end-1);
    }
    else{
        return false;
    }
}
bool checkPalindrome(char input[]) {
    // Write your code here
    int len=strlen(input)-1;
    return checkPalindrome(input,0,len);
}

void replacePi(char input[]) {
	int size = strlen(input);
    if(*(input)=='\0'){
        return;
    }
    if(*(input)=='p' && *(input+1) == 'i'){
      
      for(int i = size;i>=2; i--){
          input[i+2] = input[i];
      } 
        (*input)= '3';
        *(input+1) = '.';
        *(input+2) = '1';
        *(input+3) = '4';
    }
     replacePi( input+ 1);
}

void removeX(char input[]) {
    // Write your code here
    if(input[0]=='\0'){
        return;
    }
    int length=strlen(input);
    if(input[0]=='x'){
        for(int i=0;i<length;i++){
            input[i]=input[i+1];
        }
        removeX(input);
    }
    else{
        removeX(input+1);
    }
}

int stringToNumber(char str[],int ans=0) {
    // Write your code here
	if(strlen(str)==0)
	return ans;
	ans=stringToNumber(str+1,ans);
	ans+=(pow(10,strlen(str)-1)*(str[0]-'0'));
  return ans;  
}

void pairStar(char input[]) {
    // Write your code here
    if(input[0]=='\0'||input[1]=='\0'){
        return ;
    }
    int len=strlen(input);
    if(input[0]==input[1]){
        for(int i=len+1;i>1;i--){
            input[i]=input[i-1];
        }
        input[1]='*';
    }
    pairStar(input+1);
}

void towerOfHanoi(int n, char source, char auxiliary, char destination) {
    // Write your code here
    if(n==0){
        return ;
    }
    towerOfHanoi(n-1,source,destination,auxiliary);
    cout<<source<<" "<<destination<<endl;
    towerOfHanoi(n-1,auxiliary,source,destination);
    
}
