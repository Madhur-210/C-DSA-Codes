#include<iostream>
#include<vector>
using namespace std;

vector<int>* getpath(int** edges, int n, int sv, bool* visited,int des){
    
    if(sv==des){
        vector<int>*ans= new vector<int>();
        ans->push_back(des);
        // cout<<ans->at(0);
        return ans;
    }
    visited[sv] = true;
    for(int i=0; i<n; i++){
        if(i==sv){
            continue;
        }
        if(edges[sv][i]==1){
            if(visited[i]){
                continue;
            }
            vector<int> * smallans=getpath(edges, n, i, visited,des);
            if(smallans!=NULL){
                smallans->push_back(sv);
                return smallans;
            }
        }
    }
    return NULL;
}

int main(){
    int n;
    int e;
    cin >> n >> e;

    int** edges = new int*[n];
    for(int i=0; i<n; i++){
        edges[i]=new int[n];
        for(int j=0; j<n; j++){
            edges[i][j]=0;
        }
    }

    for(int i=0; i<e; i++){
        int f,s;
        cin >> f >> s;
        edges[f][s]=1;
        edges[s][f]=1;
    }
    int src,des;
    cin>>src>>des;

    bool* visited = new bool[n];

    for(int i=0; i<n; i++){
        visited[i]=false;
    }
    vector<int>*ans=getpath(edges, n, src, visited, des);
    if(ans!=NULL){
    // Delete all the memory
    for(int i=0;i<ans->size();i++){
        cout<<ans->at(i)<<" ";
    }
    }
    return 0;
}
