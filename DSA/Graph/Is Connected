#include<iostream>
#include<queue>
using namespace std;

void print(int** edges, int n, int sv, bool* visited){
    if(n==0){
        return ;
    }
    queue<int>q;
    q.push(sv);
    visited[sv]=true;
    while(!q.empty()){
        int top = q.front();
        // cout<<top<<" ";
        q.pop();
        for(int i=0;i<n;i++){
            if(top==i){
                continue;
            }
            if(edges[top][i]==1){
                if(visited[i])
                    continue;
                q.push(i);
                visited[i]=true;
            }

        }
    }
}
void print(int **edges, int n,bool *visited){
    print(edges,n,0,visited);
    for(int si=0;si<n;si++){
        if(!visited[si]){
            cout<<"false"<<endl;
            return;
        } 
    }
    cout<<"true"<<endl;
}

int main(){
    int n;
    int e;
    cin >> n >> e;

    int** edges = new int*[n];
    for(int i=0; i<n; i++){
        edges[i]=new int[n];
        for(int j=0; j<n; j++){
            edges[i][j]=0;
        }
    }

    for(int i=0; i<e; i++){
        int f,s;
        cin >> f >> s;
        edges[f][s]=1;
        edges[s][f]=1;
    }

    bool* visited = new bool[n];

    for(int i=0; i<n; i++){
        visited[i]=false;
    }

    print(edges, n, visited);
    // Delete all the memory
    delete [] visited;
    for(int i=0;i<n;i++){
        delete [] edges[i];
    }
    delete [] edges;
    return 0;
}
