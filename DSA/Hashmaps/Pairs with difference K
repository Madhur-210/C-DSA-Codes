//   -----------  O(2*n)  -----------

#include<unordered_map>
int getPairsWithDifferenceK(int *arr, int n, int k) {
	unordered_map<int,int> map;
    int count = 0;
    for(int i=0;i<n;i++){
        map[arr[i]] += 1;
    }
    for(int i=0;i<n;i++){
        if(k==0){
            count+=map[arr[i]]*(map[arr[i]]-1)/2;
            map[arr[i]] = 0;
            continue;
        }
        if(map[arr[i]-k]){
            count+=map[arr[i]]*map[arr[i]-k];
        }
        if(map[arr[i]+k]){
            count+=map[arr[i]]*map[arr[i]+k];
        }
        map[arr[i]] = 0;
    }
    return count;
}
// ---------------  O(n)  ------------

#include<unordered_map>
int getPairsWithDifferenceK(int *arr, int n, int k) {
	unordered_map<int,int> map;
    int count = 0;
    for(int i=0;i<n;i++){
        if(map[arr[i]-k]){
            count+=map[arr[i]-k];
        }
        if(k!=0)
        if(map[arr[i]+k]){
            count+=map[arr[i]+k];
        }
        map[arr[i]] += 1;
    }
    return count;
}
