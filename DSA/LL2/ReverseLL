//Iterative
Node *reverseLinkedList(Node *head) {
    // Write your code here
    if(head==NULL || head->next==NULL){
        return head;
    }
    Node * prev=NULL;
    Node * curr=head;
    Node * next=NULL;
    while(curr!=NULL){
        next=curr->next;
        curr->next=prev;
        prev=curr;
        curr=next;
    }
    return prev;
}
//Recursive
//First Approach
// Node *reverseLinkedListRec(Node *head)
// {
//     //Write your code here
//     if(head==NULL || head->next==NULL){
//         return head;
//     }
//     Node *newhead=reverseLinkedListRec(head->next);
//     Node *temp=newhead;
//     while(temp->next!=NULL){
//         temp=temp->next;
//     }
//     temp->next=head;
//     head->next=NULL;
//     return newhead;
// }
//Second Approach
Node *reverseLinkedListRec(Node *head)
{
    //Write your code here
    if(head==NULL || head->next==NULL){
        return head;
    }
    Node *newhead=reverseLinkedListRec(head->next);
    Node *temp=newhead;
    head->next->next=head;
    head->next=NULL;
    return newhead;
}
