void rootToLeafPathsSumToK(BinaryTreeNode<int> *root, int k,vector<int>ans) {
    // Write your code here
    if(root==NULL){
        return ;
    }
    if(root->data==k && root->left==NULL && root->right==NULL){
        ans.push_back(k);
        for(int i=0;i<ans.size();i++){
            cout<<ans[i]<<" ";
        }
        cout<<endl;
        return;
    }
    ans.push_back(root->data);
    rootToLeafPathsSumToK(root->left,k-root->data,ans);
    rootToLeafPathsSumToK(root->right,k-root->data,ans);
}

void rootToLeafPathsSumToK(BinaryTreeNode<int> *root, int k) {
    // Write your code here
    vector<int> ans ;
    rootToLeafPathsSumToK(root,k,ans);
}
