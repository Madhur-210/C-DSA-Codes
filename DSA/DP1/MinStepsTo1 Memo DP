// #include<math.h>
// int countMinStepsToOn(int n,int *ans)
// {
// 	//Write your code here
//     if(n<=1){
//         return 0;
//     }
//     if(ans[n]!=-1){
//         return ans[n];
//     }
//     int small2=INT_MAX;
//     int small3=INT_MAX;
//     if(n%2==0){
//         small2=countMinStepsToOn(n/2,ans);
//     }
//     if(n%3==0){
//         small3=countMinStepsToOn(n/3,ans);
//     }
//     int small1=countMinStepsToOn(n-1,ans);
//     ans[n]= min(small2,min(small3,small1))+1;
//     return ans[n];
// }

// int countStepsToOne(int n)
// {
//     int *ans=new int[n+1];
//     for(int i=0;i<=n;i++){
//         ans[i]=-1;
//     }
//     return countMinStepsToOn(n,ans);
// }
int countStepsToOne(int n)
{
    int *ans=new int[n+1];
    ans[0]=0;
    ans[1]=0;
    for(int i=2;i<n+1;i++){
        if(i%2==0 && i%3==0){
            ans[i]=min(ans[i/2],min(ans[i/3],ans[i-1]))+1;
        }
        else if(i%2==0){
            ans[i]=min(ans[i/2],ans[i-1])+1;
        }
        else if(i%3==0){
            ans[i]=min(ans[i/3],ans[i-1])+1;
        }
        else{
            ans[i]=ans[i-1]+1;
        }
    }
    return ans[n];
}
