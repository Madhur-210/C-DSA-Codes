//===========Brute========
#include<math.h>
int balancedBTs(int n) {
    // Write your code here
    int mod=pow(10,9)+7;
    if(n<=1){
        return 1;
    }
    
    int smallh1=balancedBTs(n-1);
    int smallh2=balancedBTs(n-2);
    return (((long)smallh1*smallh1)%mod+(2*(long)smallh2*smallh1)%mod)%mod;
}

//==========Memo===========
#include<math.h>
int balancedBTs(int n,int *ans) {
    // Write your code here
    int mod=pow(10,9)+7;
    if(n<=1){
        return 1;
    }
    if(ans[n]!=-1){
        return ans[n];
    }
    int smallh1=balancedBTs(n-1,ans);
    int smallh2=balancedBTs(n-2,ans);
    ans[n]= (((long)smallh1*smallh1)%mod+(2*(long)smallh2*smallh1)%mod)%mod;
    return ans[n];
}
int balancedBTs(int n){
    int *ans=new int[n+1];
    for(int i=0;i<=n;i++){
        ans[i]=-1;
    }
    return balancedBTs(n,ans);
}
