void insert(int *input, int n){
    int i=0;
    while(i<n){
        int ci=i;
        while(ci>0){
            int pi=(ci-1)/2;
            if(input[pi]>input[ci]){
                int swap=input[pi];
                input[pi]=input[ci];
                input[ci]=swap;
            }
            else{
                break;
            }
            ci=pi;
        }
        i++;
    }
}
void remove(int *input,int size){
    int n=size;
    while(n>0){
        int swap=input[n-1];
        input[n-1]=input[0];
        input[0]=swap;
        n--;
        int pi=0;
        while(pi<n){
            int ci1=2*pi+1;
            int ci2=ci1+1;
            int maxI=pi;
            if(ci1<n && input[ci1]<input[pi]){
                maxI=ci1;
            }
            if(ci2<n && input[ci2]<input[maxI]){
                maxI=ci2;
            }
            if(maxI!=pi){
                int temp=input[pi];
                input[pi]=input[maxI];
                input[maxI]=temp;
            }
            else{
                break;
            }
            pi=maxI;
        }
    }
}
void heapSort(int arr[], int n) {
    // Write your code
    insert(arr,n);
    remove(arr,n);
}
